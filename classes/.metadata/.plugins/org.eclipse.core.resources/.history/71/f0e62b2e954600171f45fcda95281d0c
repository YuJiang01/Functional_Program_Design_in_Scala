package streams

object BloxorzTest extends GameDef{

	println("hello")
	
def terrainFunction(levelVector: Vector[Vector[Char]]): Pos => Boolean = {
    
    val validPosSet  = {
      for(i <- 0 until levelVector.length; j<- 0  until levelVector(i).length if levelVector(i)(j) != '-' ) yield Pos(i,j)
    }
    
    validPosSet.contains
        
  }
}

/*class test1 extends StringParserTerrain{

}

object test3 {
	val level =
        """ST
          |oo
          |oo""".stripMargin
	val vector: Vector[Vector[Char]] =
    Vector(level.split("\n").map(str => Vector(str: _*)): _*)
	val test2 = new test1
	val terrain = test2.terrainFunction(vector)
	val startPos = test2.findChar('S', vector)
	val goal = test2.findChar('T', vector)
}*/