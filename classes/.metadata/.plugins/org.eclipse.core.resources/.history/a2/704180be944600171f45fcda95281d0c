package streams

/*object BloxorzTest{

println("hello")                                  //> hello

val level =
        """ST
          |oo
          |oo""".stripMargin                      //> level  : String = ST
                                                  //| oo
                                                  //| oo
  val vector: Vector[Vector[Char]] =
    Vector(level.split("\n").map(str => Vector(str: _*)): _*)
                                                  //> vector  : Vector[Vector[Char]] = Vector(Vector(S, T), Vector(o, o), Vector(o
                                                  //| , o))


	
   //val terrain: Terrain = terrainFunction(vector)
   /*val startPos: Pos = findChar('S', vector)
   val goal: Pos = findChar('T', vector)*/

}*/

class test1 extends StringParserTerrain{

}

object test3 {
	val level =
        """ST
          |oo
          |oo""".stripMargin
	val vector: Vector[Vector[Char]] =
    Vector(level.split("\n").map(str => Vector(str: _*)): _*)
	val test2 = new test1
	val terrain = test2.terrainFunction(vector)
	val startPos = test2.findChar('S', vector)
	val goal = test2.findChar('T', vector)
}

